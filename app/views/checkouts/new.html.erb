<div class="container">
  <h3>Checkout Form</h3>
  <form id="checkout-form" action=<%= order_checkouts_path(@order) %> method="post">
    <div id="error-message"></div>

    <label for="card-number">Card Number</label>
    <div class="hosted-field" id="card-number"></div>

    <label for="cvv">CVV</label>
    <div class="hosted-field" id="cvv"></div>

    <label for="expiration-date">Expiration Date</label>
    <div class="hosted-field" id="expiration-date"></div>

    <input type="hidden" class="amount" id="pay-amount" name="checkout[amount]" value="<%= @order.price %>"></input>

    <input type="hidden" name="checkout[payment_method_nonce]">
    <%= submit_tag "Pay #{RM @order.price}", data: { disable_with: false } %>
    <!-- <input type="submit" value="Pay < %=RM @order.price %>" disabled> -->
  </form>
</div>




<script>
  // We generated a client token for you so you can test out this code
  // immediately. In a production-ready integration, you will need to
  // generate a client token on your server (see section below).
  var form = document.querySelector('#checkout-form');
  // var authorization = ;
  var submit = document.querySelector('input[type="submit"]');

  braintree.client.create({
  // Replace this with your own authorization.
  authorization: "<%= @token %>"
}, function (clientErr, clientInstance) {
  if (clientErr) {
    // Handle error in client creation
    return;
  }

  braintree.hostedFields.create({
    client: clientInstance,
    styles: {
      'input': {
        'font-size': '14pt'
      },
      'input.invalid': {
        'color': 'red'
      },
      'input.valid': {
        'color': 'green'
      }
    },
    fields: {
      number: {
        selector: '#card-number',
        placeholder: '4111 1111 1111 1111'
      },
      cvv: {
        selector: '#cvv',
        placeholder: '123'
      },
      expirationDate: {
        selector: '#expiration-date',
        placeholder: '10/2019'
      }
    }
  }, function (hostedFieldsErr, hostedFieldsInstance) {
    if (hostedFieldsErr) {
      // Handle error in Hosted Fields creation
      return;
    }

    submit.removeAttribute('disabled');

    form.addEventListener('submit', function (event) {
      event.preventDefault();

      hostedFieldsInstance.tokenize(function (tokenizeErr, payload) {
        if (tokenizeErr) {
          // Handle error in Hosted Fields tokenization
          return;
        }

        // Put `payload.nonce` into the `payment-method-nonce` input, and then
        // submit the form. Alternatively, you could send the nonce to your server
        // with AJAX.
        document.querySelector('input[name="checkout[payment_method_nonce]"]').value = payload.nonce;
        form.submit();
      });
    }, false);
  });
});
</script>